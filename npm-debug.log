0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files (x86)\\nodejs\\\\node.exe',
1 verbose cli   'C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'link' ]
2 info using npm@1.3.21
3 info using node@v0.10.24
4 verbose node symlink C:\Program Files (x86)\nodejs\\node.exe
5 verbose linkPkg c:\Development\Projects\HostedPortal\Source\nodechargify
6 verbose link build target C:\Users\tshnaider\AppData\Roaming\npm\node_modules\nodechargify
7 verbose install where,what [ 'c:\\Development\\Projects\\HostedPortal\\Source\\nodechargify',
7 verbose install   [] ]
8 verbose readDependencies using package.json deps
9 verbose install where, deps [ 'c:\\Development\\Projects\\HostedPortal\\Source\\nodechargify',
9 verbose install   [ 'request',
9 verbose install     'dateformat',
9 verbose install     'q',
9 verbose install     'log4js',
9 verbose install     'lodash',
9 verbose install     'node-schema-object',
9 verbose install     'should',
9 verbose install     'mocha' ] ]
10 info preinstall nodechargify@0.1.9
11 warn package.json dateformat@1.0.6-1.2.3 No repository field.
12 verbose readDependencies using package.json deps
13 verbose already installed skipping request@ c:\Development\Projects\HostedPortal\Source\nodechargify
14 verbose already installed skipping dateformat@ c:\Development\Projects\HostedPortal\Source\nodechargify
15 verbose already installed skipping q@ c:\Development\Projects\HostedPortal\Source\nodechargify
16 verbose already installed skipping log4js@ c:\Development\Projects\HostedPortal\Source\nodechargify
17 verbose already installed skipping lodash@ c:\Development\Projects\HostedPortal\Source\nodechargify
18 verbose cache add [ 'node-schema-object@git://github.com/TimNZ/node-schema-object.git',
18 verbose cache add   null ]
19 verbose cache add name=undefined spec="node-schema-object@git://github.com/TimNZ/node-schema-object.git" args=["node-schema-object@git://github.com/TimNZ/node-schema-object.git",null]
20 verbose parsed url { protocol: null,
20 verbose parsed url   slashes: null,
20 verbose parsed url   auth: null,
20 verbose parsed url   host: null,
20 verbose parsed url   port: null,
20 verbose parsed url   hostname: null,
20 verbose parsed url   hash: null,
20 verbose parsed url   search: null,
20 verbose parsed url   query: null,
20 verbose parsed url   pathname: 'node-schema-object@git://github.com/TimNZ/node-schema-object.git',
20 verbose parsed url   path: 'node-schema-object@git://github.com/TimNZ/node-schema-object.git',
20 verbose parsed url   href: 'node-schema-object@git://github.com/TimNZ/node-schema-object.git' }
21 verbose cache add name="node-schema-object" spec="git://github.com/TimNZ/node-schema-object.git" args=["node-schema-object","git://github.com/TimNZ/node-schema-object.git"]
22 verbose parsed url { protocol: 'git:',
22 verbose parsed url   slashes: true,
22 verbose parsed url   auth: null,
22 verbose parsed url   host: 'github.com',
22 verbose parsed url   port: null,
22 verbose parsed url   hostname: 'github.com',
22 verbose parsed url   hash: null,
22 verbose parsed url   search: null,
22 verbose parsed url   query: null,
22 verbose parsed url   pathname: '/TimNZ/node-schema-object.git',
22 verbose parsed url   path: '/TimNZ/node-schema-object.git',
22 verbose parsed url   href: 'git://github.com/TimNZ/node-schema-object.git' }
23 verbose already installed skipping should@* c:\Development\Projects\HostedPortal\Source\nodechargify
24 verbose already installed skipping mocha@* c:\Development\Projects\HostedPortal\Source\nodechargify
25 silly lockFile 598714c5-com-TimNZ-node-schema-object-git git://github.com/TimNZ/node-schema-object.git
26 verbose lock git://github.com/TimNZ/node-schema-object.git C:\Users\tshnaider\AppData\Roaming\npm-cache\598714c5-com-TimNZ-node-schema-object-git.lock
27 verbose addRemoteGit [ 'git://github.com/TimNZ/node-schema-object.git', 'master' ]
28 verbose git remote.origin.url git://github.com/TimNZ/node-schema-object.git
29 verbose git fetch -a origin (git://github.com/TimNZ/node-schema-object.git)
30 verbose git rev-list -n1 master d8a6760b0087983537a0ed043a58a1094eaf55ab
31 verbose resolved git url git://github.com/TimNZ/node-schema-object.git#d8a6760b0087983537a0ed043a58a1094eaf55ab
32 verbose tar unpack C:\Users\TSHNAI~1\AppData\Local\Temp\npm-11276-Zf7laPYc\1390460271426-0.990267286542803\tmp.tgz
33 silly lockFile f43e5d90-271426-0-990267286542803-package tar://C:\Users\TSHNAI~1\AppData\Local\Temp\npm-11276-Zf7laPYc\1390460271426-0.990267286542803\package
34 verbose lock tar://C:\Users\TSHNAI~1\AppData\Local\Temp\npm-11276-Zf7laPYc\1390460271426-0.990267286542803\package C:\Users\tshnaider\AppData\Roaming\npm-cache\f43e5d90-271426-0-990267286542803-package.lock
35 silly lockFile 93b09b00-271426-0-990267286542803-tmp-tgz tar://C:\Users\TSHNAI~1\AppData\Local\Temp\npm-11276-Zf7laPYc\1390460271426-0.990267286542803\tmp.tgz
36 verbose lock tar://C:\Users\TSHNAI~1\AppData\Local\Temp\npm-11276-Zf7laPYc\1390460271426-0.990267286542803\tmp.tgz C:\Users\tshnaider\AppData\Roaming\npm-cache\93b09b00-271426-0-990267286542803-tmp-tgz.lock
37 silly gunzTarPerm modes [ '755', '644' ]
38 silly gunzTarPerm extractEntry
39 silly gunzTarPerm modified mode [ '', 509, 493 ]
40 silly gunzTarPerm extractEntry .gitignore
41 silly gunzTarPerm modified mode [ '.gitignore', 436, 420 ]
42 silly gunzTarPerm extractEntry .npmignore
43 silly gunzTarPerm modified mode [ '.npmignore', 436, 420 ]
44 silly gunzTarPerm extractEntry .travis.yml
45 silly gunzTarPerm modified mode [ '.travis.yml', 436, 420 ]
46 silly gunzTarPerm extractEntry README.md
47 silly gunzTarPerm modified mode [ 'README.md', 436, 420 ]
48 silly gunzTarPerm extractEntry index.js
49 silly gunzTarPerm modified mode [ 'index.js', 436, 420 ]
50 silly gunzTarPerm extractEntry lib/
51 silly gunzTarPerm modified mode [ 'lib/', 509, 493 ]
52 silly gunzTarPerm extractEntry lib/schemaobject.js
53 silly gunzTarPerm modified mode [ 'lib/schemaobject.js', 436, 420 ]
54 silly gunzTarPerm extractEntry package.json
55 silly gunzTarPerm modified mode [ 'package.json', 436, 420 ]
56 silly gunzTarPerm extractEntry test/
57 silly gunzTarPerm modified mode [ 'test/', 509, 493 ]
58 silly gunzTarPerm extractEntry test/tests.js
59 silly gunzTarPerm modified mode [ 'test/tests.js', 436, 420 ]
60 silly lockFile f43e5d90-271426-0-990267286542803-package tar://C:\Users\TSHNAI~1\AppData\Local\Temp\npm-11276-Zf7laPYc\1390460271426-0.990267286542803\package
61 silly lockFile f43e5d90-271426-0-990267286542803-package tar://C:\Users\TSHNAI~1\AppData\Local\Temp\npm-11276-Zf7laPYc\1390460271426-0.990267286542803\package
62 silly lockFile 93b09b00-271426-0-990267286542803-tmp-tgz tar://C:\Users\TSHNAI~1\AppData\Local\Temp\npm-11276-Zf7laPYc\1390460271426-0.990267286542803\tmp.tgz
63 silly lockFile 93b09b00-271426-0-990267286542803-tmp-tgz tar://C:\Users\TSHNAI~1\AppData\Local\Temp\npm-11276-Zf7laPYc\1390460271426-0.990267286542803\tmp.tgz
64 verbose tar pack [ 'C:\\Users\\tshnaider\\AppData\\Roaming\\npm-cache\\node-schema-object\\0.7.0\\package.tgz',
64 verbose tar pack   'C:\\Users\\TSHNAI~1\\AppData\\Local\\Temp\\npm-11276-Zf7laPYc\\1390460271426-0.990267286542803\\package' ]
65 verbose tarball C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package.tgz
66 verbose folder C:\Users\TSHNAI~1\AppData\Local\Temp\npm-11276-Zf7laPYc\1390460271426-0.990267286542803\package
67 silly lockFile f43e5d90-271426-0-990267286542803-package tar://C:\Users\TSHNAI~1\AppData\Local\Temp\npm-11276-Zf7laPYc\1390460271426-0.990267286542803\package
68 verbose lock tar://C:\Users\TSHNAI~1\AppData\Local\Temp\npm-11276-Zf7laPYc\1390460271426-0.990267286542803\package C:\Users\tshnaider\AppData\Roaming\npm-cache\f43e5d90-271426-0-990267286542803-package.lock
69 silly lockFile 65fc8aff--schema-object-0-7-0-package-tgz tar://C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package.tgz
70 verbose lock tar://C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package.tgz C:\Users\tshnaider\AppData\Roaming\npm-cache\65fc8aff--schema-object-0-7-0-package-tgz.lock
71 silly lockFile f43e5d90-271426-0-990267286542803-package tar://C:\Users\TSHNAI~1\AppData\Local\Temp\npm-11276-Zf7laPYc\1390460271426-0.990267286542803\package
72 silly lockFile f43e5d90-271426-0-990267286542803-package tar://C:\Users\TSHNAI~1\AppData\Local\Temp\npm-11276-Zf7laPYc\1390460271426-0.990267286542803\package
73 silly lockFile 65fc8aff--schema-object-0-7-0-package-tgz tar://C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package.tgz
74 silly lockFile 65fc8aff--schema-object-0-7-0-package-tgz tar://C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package.tgz
75 silly lockFile 97f5ec7d-node-schema-object-0-7-0-package C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package
76 verbose lock C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package C:\Users\tshnaider\AppData\Roaming\npm-cache\97f5ec7d-node-schema-object-0-7-0-package.lock
77 silly lockFile 97f5ec7d-node-schema-object-0-7-0-package C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package
78 silly lockFile 97f5ec7d-node-schema-object-0-7-0-package C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package
79 verbose tar unpack C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package.tgz
80 silly lockFile ab34cf91-node-schema-object-0-7-0-package tar://C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package
81 verbose lock tar://C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package C:\Users\tshnaider\AppData\Roaming\npm-cache\ab34cf91-node-schema-object-0-7-0-package.lock
82 silly lockFile 65fc8aff--schema-object-0-7-0-package-tgz tar://C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package.tgz
83 verbose lock tar://C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package.tgz C:\Users\tshnaider\AppData\Roaming\npm-cache\65fc8aff--schema-object-0-7-0-package-tgz.lock
84 silly gunzTarPerm modes [ '755', '644' ]
85 silly gunzTarPerm extractEntry package.json
86 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
87 silly gunzTarPerm extractEntry .npmignore
88 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
89 silly gunzTarPerm extractEntry README.md
90 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
91 silly gunzTarPerm extractEntry index.js
92 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
93 silly gunzTarPerm extractEntry .travis.yml
94 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
95 silly gunzTarPerm extractEntry lib/schemaobject.js
96 silly gunzTarPerm modified mode [ 'lib/schemaobject.js', 438, 420 ]
97 silly gunzTarPerm extractEntry test/tests.js
98 silly gunzTarPerm modified mode [ 'test/tests.js', 438, 420 ]
99 silly lockFile ab34cf91-node-schema-object-0-7-0-package tar://C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package
100 silly lockFile ab34cf91-node-schema-object-0-7-0-package tar://C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package
101 silly lockFile 65fc8aff--schema-object-0-7-0-package-tgz tar://C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package.tgz
102 silly lockFile 65fc8aff--schema-object-0-7-0-package-tgz tar://C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package.tgz
103 verbose chmod C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package.tgz 644
104 silly chown skipping for windows C:\Users\tshnaider\AppData\Roaming\npm-cache\node-schema-object\0.7.0\package.tgz
105 silly lockFile 598714c5-com-TimNZ-node-schema-object-git git://github.com/TimNZ/node-schema-object.git
106 silly lockFile 598714c5-com-TimNZ-node-schema-object-git git://github.com/TimNZ/node-schema-object.git
107 silly resolved [ { name: 'node-schema-object',
107 silly resolved     version: '0.7.0',
107 silly resolved     description: 'Node object with validated, transformed & typecasted schema.',
107 silly resolved     main: 'index.js',
107 silly resolved     directories: { test: 'test' },
107 silly resolved     scripts: { test: 'mocha' },
107 silly resolved     repository:
107 silly resolved      { type: 'git',
107 silly resolved        url: 'git@github.com:scotthovestadt/node-schema-object.git' },
107 silly resolved     keywords: [ 'schema' ],
107 silly resolved     dependencies: { underscore: '1.4.x' },
107 silly resolved     devDependencies: { should: '*', mocha: '*' },
107 silly resolved     author: { name: 'Scott Hovestadt' },
107 silly resolved     license: 'BSD',
107 silly resolved     readmeFilename: 'README.md',
107 silly resolved     readme: 'node-schema-object [![Build Status](https://travis-ci.org/scotthovestadt/node-schema-object.png?branch=master)](https://travis-ci.org/scotthovestadt/node-schema-object)\r\n==================\r\n\r\nDesigned to enforce schema on Javascript objects. Allows you to specify type, transformation and validation of values via a set of attributes. Support for sub-schemas included.\r\n\r\n```\r\nnpm install node-schema-object\r\n```\r\n\r\n#Very basic usage example\r\n```\r\nvar SchemaObject = require(\'node-schema-object\');\r\n\r\n// Create User schema\r\nvar User = new SchemaObject({\r\n  firstName: String,\r\n  lastName: String,\r\n  birthDate: Date\r\n});\r\n\r\n// Initialize instance of user\r\nvar user = new User({firstName: \'Scott\', lastName: \'Hovestadt\', birthDate: \'June 21, 1988\'});\r\nconsole.log(user.toObject());\r\n\r\n// Prints:\r\n{ firstName: \'Scott\',\r\n  lastName: \'Hovestadt\',\r\n  birthDate: Tue Jun 21 1988 00:00:00 GMT-0700 (PDT) }\r\n```\r\n\r\n#Advanced example\r\n```\r\nvar SchemaObject = require(\'node-schema-object\');\r\n\r\n// Create custom basic type\r\n// Type can be extended with more properties when defined\r\nvar NotEmptyString = {type: String, minLength: 1};\r\n\r\n// Create sub-schema for user\'s Company\r\nvar Company = new SchemaObject({\r\n  startDate: Date,\r\n  endDate: Date,\r\n  name: NotEmptyString\r\n});\r\n\r\n// Create User schema\r\nvar User = new SchemaObject({\r\n  // Basic user information using custom type\r\n  firstName: NotEmptyString,\r\n  lastName: NotEmptyString,\r\n  \r\n  // "NotEmptyString" with only possible values as \'m\' or \'f\'\r\n  gender: {type: NotEmptyString, enum: [\'m\', \'f\']},\r\n  \r\n  // Index with sub-schema\r\n  company: Company,\r\n  \r\n  // An array of Objects with an enforced type\r\n  workHistory: [Company],\r\n  \r\n  // Create field which reflects other values but can\'t be directly modified\r\n  fullName: {type: String, readOnly: true, default: function() {\r\n    return (this.firstName + \' \' + this.lastName).trim();\r\n  }}\r\n});\r\n\r\n// Initialize a new instance of the User with a value\r\nvar user = new User({firstName: \'Scott\', lastName: \'Hovestadt\', gender: \'m\'});\r\n\r\n// Set company name\r\nuser.company.name = \'My Company\';\r\n\r\n// The date is automatically typecast from String\r\nuser.company.startDate = \'June 1, 2010\';\r\n\r\n// Add company to work history\r\nuser.workHistory.push({\r\n  name: \'Old Company\',\r\n  startDate: \'01/12/2005\',\r\n  endDate: \'01/20/2010\'\r\n});\r\n\r\nconsole.log(user.toObject());\r\n\r\n// Prints:\r\n{ firstName: \'Scott\',\r\n  lastName: \'Hovestadt\',\r\n  gender: \'m\',\r\n  company: \r\n   { startDate: Tue Jun 01 2010 00:00:00 GMT-0700 (PDT),\r\n     endDate: undefined,\r\n     name: \'My Company\' },\r\n  workHistory: \r\n   [ { startDate: Wed Jan 12 2005 00:00:00 GMT-0800 (PST),\r\n       endDate: Wed Jan 20 2010 00:00:00 GMT-0800 (PST),\r\n       name: \'Old Company\' } ],\r\n  fullName: \'Scott Hovestadt\' }\r\n```\r\n\r\n#Types\r\n\r\nSupported types:\r\n- String\r\n- Number\r\n- Boolean\r\n- Date\r\n- Array (including types within Array)\r\n- Object (including typed SchemaObjects for sub-schemas)\r\n- \'alias\'\r\n- undefined\r\n\r\nWhen a type is specified, it will be enforced. Typecasting is enforced on all types. If a value cannot be typecasted to the correct type, the original value will remain untouched.\r\n\r\nTypes can be extended with a variety of attributes. Some attributes are type-specific and some apply to all types.\r\n\r\nCustom types can be created by defining an object with type properties.\r\n```\r\nvar NotEmptyString = {type: String, minLength: 1};\r\ncountry: {type: NotEmptyString, default: \'USA\'}\r\n```\r\n\r\n##General attributes\r\n\r\n###transform\r\nCalled immediately when value is set and before any typecast is done.\r\n```\r\nname: {type: String, transform: function(value) {\r\n  // Modify the value here...\r\n  return value;\r\n}}\r\n```\r\n\r\n###default\r\nProvide default value. You may pass value directly or pass a function which will be executed when the value is retrieved. The function is executed in the context of the object and can use "this" to access other properties.\r\n```\r\ncountry: {type: String, default: \'USA\'}\r\n```\r\n\r\n###readOnly\r\nIf true, the value can be read but cannot be written to. This can be useful for creating fields that reflect other values.\r\n```\r\nfullName: {type: String, readOnly: true, default: function(value) {\r\n  return (this.firstName + \' \' + this.lastName).trim();\r\n}}\r\n```\r\n\r\n###invisible\r\nIf true, the value can be written to but isn\'t outputted as an index when toObject() is called. This can be useful for creating aliases that redirect to other indexes but aren\'t actually present on the object.\r\n```\r\nzip: String,\r\npostalCode: {type: \'alias\', invisible: true, index: \'zip\'}\r\n// this.postalCode = 12345 -> this.toObject() -> {zip: \'12345\'}\r\n```\r\n\r\n\r\n##String\r\n\r\n###stringTransform\r\nCalled after value is typecast to string **if** value was successfully typecast but called before all validation.\r\n```\r\npostalCode: {type: String, stringTransform: function(string) {\r\n  // Type will ALWAYS be String, so using string prototype is OK.\r\n  return string.toUpperCase();\r\n}}\r\n```\r\n\r\n###regex\r\nValidates string against Regular Expression. If string doesn\'t match, it\'s rejected.\r\n```\r\nmemberCode: {type: String, regex: new RegExp(\'^([0-9A-Z]{4})$\')}\r\n```\r\n\r\n###enum\r\nValidates string against array of strings. If not present, it\'s rejected.\r\n```\r\ngender: {type: String, enum: [\'m\', \'f\']}\r\n```\r\n\r\n###minLength\r\nEnforces minimum string length.\r\n```\r\nnotEmpty: {type: String, minLength: 1}\r\n```\r\n\r\n###maxLength\r\nEnforces maximum string length.\r\n```\r\nstateAbbrev: {type: String, maxLength: 2}\r\n```\r\n\r\n###clip\r\nIf true, clips string to maximum string length instead of rejecting string.\r\n```\r\nbio: {type: String, maxLength: 255, clip: true}\r\n```\r\n\r\n\r\n##Number\r\n\r\n###min\r\nNumber must be > min attribute or it\'s rejected.\r\n```\r\npositive: {type: Number, min: 0}\r\n```\r\n\r\n###max\r\nNumber must be < max attribute or it\'s rejected.\r\n```\r\nnegative: {type: Number, max: 0}\r\n```\r\n\r\n\r\n##Array\r\n\r\n###unique\r\nEnsures duplicate-free array, using === to test object equality.\r\n```\r\nemails: {type: Array, unique: true, arrayType: String}\r\n```\r\n\r\n###arrayType\r\nElements within the array will be typed to the attributes defined.\r\n```\r\naliases: {type: Array, arrayType: {type: String, minLength: 1}}\r\n```\r\n\r\nAn alternative shorthand version is also available -- wrap the properties within array brackets.\r\n```\r\naliases: [{type: String, minLength: 1}]\r\n```\r\n\r\n\r\n##Object\r\n###objectType\r\nAllows you to define a typed object.\r\n```\r\ncompany: {type: Object, objectType: {\r\n  name: String\r\n}}\r\n```\r\n\r\nAn alternative shorthand version is also available -- simply pass an instance of SchemaObject or a schema.\r\n```\r\ncompany: {\r\n  name: String\r\n}\r\n```\r\n\r\n\r\n##Alias\r\n\r\n###index (required)\r\nThe index key of the property being aliased.\r\n```\r\nzip: String,\r\npostalCode: {type: \'alias\', alias: \'zip\'}\r\n// this.postalCode = 12345 -> this.toObject() -> {zip: \'12345\'}\r\n```\r\n\r\n#Unit tests\r\n```\r\n  any type\r\n    transform\r\n      ✓ should turn any string to lowercase but not touch other values \r\n    default\r\n      ◦ default as function + readOnly to combine properties into single readOnl      ✓ default as function + readOnly to combine properties into single readOnly property \r\n    alias\r\n      ✓ should allow alias to be used to set values \r\n      ✓ should allow alias to pre-transform values \r\n    readOnly\r\n      ✓ should not allow you to modify value \r\n\r\n  String\r\n    typecasting\r\n      ✓ should typecast integer to string \r\n      ✓ should typecast boolean to string \r\n      ✓ should join array into string \r\n      ✓ should reject object \r\n    regex\r\n      ✓ should only allow values that match regex ^([A-Z]{4})$ \r\n    enum\r\n      ✓ should allow values in enum \r\n      ✓ value should remain untouched when non-enum is passed \r\n      ✓ default must be in enum or is rejected \r\n      ✓ default should be set when in enum \r\n    stringTransform\r\n      ✓ should return lowercase \r\n      ◦ should always be passed a String object and not called if undefined or n      ✓ should always be passed a String object and not called if undefined or null \r\n    read only\r\n      ✓ should always be default value \r\n    minLength\r\n      ✓ should not allow empty strings \r\n    maxLength\r\n      ✓ should allow a max of 5 characters \r\n    maxLength + clip\r\n      ✓ should clip string to 5 characters \r\n\r\n  Number\r\n    typecasting\r\n      ✓ should typecast string to number \r\n      ✓ should typecast boolean to number \r\n    min\r\n      ✓ should reject values below min \r\n    max\r\n      ✓ should reject values above max \r\n\r\n  Boolean\r\n    typecasting\r\n      ✓ should typecast string to boolean \r\n      ✓ should typecast number to boolean \r\n\r\n  Object\r\n    accessing properties\r\n      ✓ should set properties without initializing object \r\n    schema\r\n      ✓ should allow nested schemas \r\n      ✓ should allow shorthand declaration \r\n\r\n  Array\r\n    typecasting\r\n      ✓ should typecast all array elements to string \r\n      ✓ should transform all strings to lowercase \r\n      ✓ should allow you to push() in new schema objects \r\n      ✓ should enforce types on existing array elements \r\n    unique\r\n      ✓ should enforce unique values within array with typecasting \r\n      ✓ should enforce unique values within array without typecasting \r\n    toArray\r\n      ✓ should return native Array \r\n\r\n  Date\r\n    typecasting\r\n      ✓ should typecast string "June 21, 1988" to date \r\n      ✓ should typecast string "06/21/1988" to date \r\n      ✓ should typecast string "6/21/1988" to date \r\n      ✓ should reject nonsense strings \r\n      ✓ should typecast integer timestamp seconds to date \r\n      ✓ should typecast integer timestamp milliseconds to date \r\n      ✓ should reject boolean \r\n      ✓ should reject array \r\n      ✓ should reject object \r\n\r\n  toObject()\r\n    ✓ should have index "string" with value "1234" \r\n    ✓ should write Date object for Date type \r\n    ✓ should converted nested SchemaObjects to primitive Object \r\n    ✓ should converted SchemaObjects nested within Arrays to primitive Objects \r\n    ✓ should not write invisible indexes \r\n\r\n  type definition\r\n    ✓ should allow custom type using an object with properties in "type" property and merge properties together \r\n```\r\n',
107 silly resolved     bugs: { url: 'https://github.com/scotthovestadt/node-schema-object/issues' },
107 silly resolved     _id: 'node-schema-object@0.7.0',
107 silly resolved     dist: { shasum: 'fb321490630efa909b21ad93c2157324f5990fcd' },
107 silly resolved     _resolved: 'git://github.com/TimNZ/node-schema-object.git#d8a6760b0087983537a0ed043a58a1094eaf55ab',
107 silly resolved     _from: 'node-schema-object@git://github.com/TimNZ/node-schema-object.git',
107 silly resolved     homepage: 'https://github.com/scotthovestadt/node-schema-object' } ]
108 info install node-schema-object@0.7.0 into c:\Development\Projects\HostedPortal\Source\nodechargify
109 info installOne node-schema-object@0.7.0
110 error git Appears to be a git repo or submodule.
110 error git     c:\Development\Projects\HostedPortal\Source\nodechargify\node_modules\node-schema-object
110 error git Refusing to remove it. Update manually,
110 error git or move it out of the way first.
111 error System Windows_NT 6.1.7601
112 error command "C:\\Program Files (x86)\\nodejs\\\\node.exe" "C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "link"
113 error cwd c:\Development\Projects\HostedPortal\Source\nodechargify
114 error node -v v0.10.24
115 error npm -v 1.3.21
116 error path c:\Development\Projects\HostedPortal\Source\nodechargify\node_modules\node-schema-object
117 error code EISGIT
118 verbose exit [ 1, true ]
